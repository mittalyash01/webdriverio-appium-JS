name: CI saucelabs
on: 
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: 'Platform (iOS/Android/both)'
        required: false
        default: android
        options:
        - android
        - ios
      spec:
        type: choice
        default: all
        options:
          - 1_LOGIN_valid_user.spec
          - 2_LOGIN_locked_out_user.spec
          - 3_LOGIN_invalid_user.spec
          - 4_PRODUCT_onesie.spec
          - all
        description: 'Spec (no file extension needed)'
        required: false
      device:
        type: choice
        description: 'Device'
        required: false
        options:
          - Samsung Galaxy S9
          - iPhone 12
          - iPhone XR
          - iPad Air 2
      os_version:
        description: 'OS version'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 16.3.0
        - name: Install
          run: npm install
        - name: Test
          run: |
            if [[ "${{ github.event.inputs.platform }}" == "android" ]]; then
              if [ "${{ github.event.inputs.spec }}" != 'all'  ]; then
                npm --device="${{ github.event.inputs.device }}" --osversion=${{ github.event.inputs.os_version }} run test:saucelabs:android -- --spec=./test/specs/**/${{ github.event.inputs.spec }}.js 
              else
                npm --device="${{ github.event.inputs.device }}" --osversion=${{ github.event.inputs.os_version }} run test:saucelabs:android
              fi
            else
              if [ "${{ github.event.inputs.spec }}" != 'all'  ]; then
                npm --device="${{ github.event.inputs.device }}" --osversion=${{ github.event.inputs.os_version }} run test:saucelabs:ios -- --spec=./test/specs/**/${{ github.event.inputs.spec }}.js 
              else
                npm --device="${{ github.event.inputs.device }}" --osversion=${{ github.event.inputs.os_version }} run test:saucelabs:ios
              fi
            fi
          env:
            SAUCELABS_ACCESS_KEY: ${{ secrets.SAUCELABS_ACCESS_KEY }}
            SAUCELABS_USERNAME: ${{ secrets.SAUCELABS_USERNAME }}
        - uses: actions/upload-artifact@v1
          if: failure()
          with:
            name: logs
            path: logs

        - name: Generate Report
          if: success() || failure()
          run: |
           npx allure generate --clean

        - uses: actions/upload-artifact@master
          with:
            name: allure-results
            path: allure-results
            retention-days: 10

        - name: Get Allure history
          uses: actions/checkout@v2
          if: success() || failure()
          continue-on-error: true
          with:
            ref: gh-pages
            path: gh-pages

        - name: Test marketplace action
          uses: simple-elf/allure-report-action@master
          if: success() || failure()
          id: allure-report
          with:
            allure_results: allure-results
            gh_pages: gh-pages
            allure_report: allure-report
            allure_history: allure-history
            keep_reports: 10
            subfolder: browserstack-results

        - name: Deploy report to Github Pages
          if: success() || failure()
          uses: peaceiris/actions-gh-pages@v2
          env:
            PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PUBLISH_BRANCH: gh-pages
            PUBLISH_DIR: allure-history
